---
interface Props {
    text: string;
    class: string;
}

const { text } = Astro.props as Props;
---
<label
    class:list={Astro.props.class}
    class="inline-flex items-center me-5 cursor-pointer"
    id="toggle"
>
    <input id="debug" type="checkbox" value="" class="sr-only peer">
    <div class="relative w-11 h-6 bg-gray-200 rounded-full peer peer-focus:ring-4 peer-focus:ring-transparent peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary"></div>
    <span class="ms-3 text-sm font-medium text-white">{text}</span>
</label>

<script>
    import { $ } from "@/lib/dom-selector";
    import { isDebugMode } from "@/store";

    const $debug = $('#debug');

    if ($debug) {
        $debug.addEventListener('change', (e: Event) => {
            const realWrapper = $('#real-wrapper');
            const debugWrapper = $('#debug-wrapper');
            const target = e.target as HTMLInputElement;
            if (target.checked) {
                isDebugMode.set(true);
                realWrapper.classList.add('hidden');
                debugWrapper.classList.remove('hidden');
            } else {
                isDebugMode.set(false);
                realWrapper.classList.remove('hidden');
                debugWrapper.classList.add('hidden');
            }
        });
    }

</script>