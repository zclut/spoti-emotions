---
import type { User } from "@auth/core/types";
import Spinner from "../icons/Spinner.astro";
import Loader from "./Loader.astro";
interface Props {
  user: User;
}

const { user } = Astro.props as Props;

const label = user ? "¡Analiza tu música!" : "Inicia sesión";
---

<Loader />

<button
  data-token={user.id}
  data-username={user.name}
  class="flex items-center w-auto p-3 rounded-md bg-secondary border border-primary text-primary hover:bg-primary hover:text-secondary transition duration-300 ease-in-out"
  id="analysis-button"
>
  <Spinner class:list={"w-8 h-7 hidden"} id="spinner" />
  <span>{label}</span>
</button>

<script>
  import { $ } from "@/lib/dom-selector";
  import { storyLine, favoriteTracks, loadingStoryLine } from "@/store";
  import { signOut } from "auth-astro/client";

  const $analysisButton = $("#analysis-button");
  const $spinner = $("#spinner");
  if ($analysisButton) {
    $analysisButton.onclick = async () => {
      loadingStoryLine.set(true);
      $analysisButton.classList.add("hidden");
      const { token, username } = $analysisButton.dataset;
      $spinner.classList.remove("hidden");
      $analysisButton.setAttribute("aria-disabled", "true");
      try {
        const response = await fetch("/api/ai/analysis", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ accessToken: token, username: username }),
        });
        const data = await response.json();

        if (response.status !== 200) {
          await signOut();
          return;
        }

        storyLine.set(data.storyline);
        favoriteTracks.set(data.favoriteTracks);
      } catch (error) {
        console.error(error);
        $analysisButton.classList.remove("hidden");
      } finally {
        $spinner.classList.add("hidden");
        $analysisButton.removeAttribute("aria-disabled");
        loadingStoryLine.set(false);
      }
    };
  }
</script>
